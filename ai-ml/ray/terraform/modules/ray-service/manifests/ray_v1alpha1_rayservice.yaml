
rayVersion: 2.5.0
enableInTreeAutoscaling: true
######################headGroupSpecs#################################
# Ray head pod template.
headGroupSpec:
  rayStartParams:
    dashboard-host: '0.0.0.0'
    num-cpus: '0'
  #pod template
  template:
    spec:
      containers:
        - name: ray-head
          image: 829527579886.dkr.ecr.us-west-2.amazonaws.com/ray/stable-diffusion-demo:latest
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 2
              memory: 4Gi
            requests:
              cpu: 2
              memory: 4Gi
          ports:
            - containerPort: 6379
              name: gcs-server
            - containerPort: 8265 # Ray dashboard
              name: dashboard
            - containerPort: 10001
              name: client
            - containerPort: 8000
              name: serve
          env:
            - name: RAY_REDIS_ADDRESS
              valueFrom:
                secretKeyRef:
                  name: redis-secret
                  key: host
      #nodeSelector:
      #  owner: ${ray_cluster_name}
workerGroupSpecs:
  # the pod replicas in this group typed worker
  - replicas: 3
    minReplicas: 2
    maxReplicas: 3
    # logical group name, for this called small-group, also can be functional
    groupName: small-group
    rayStartParams: {}
    #pod template
    template:
      spec:
        containers:
          - name: ray-worker
            image: 829527579886.dkr.ecr.us-west-2.amazonaws.com/ray/stable-diffusion-demo:latest
            imagePullPolicy: IfNotPresent
            lifecycle:
              preStop:
                exec:
                  command: ["/bin/sh","-c","ray stop"]
            resources:
              limits:
                cpu: "2"
                memory: "16Gi"
                nvidia.com/gpu:  1
              requests:
                cpu: "2"
                memory: "16Gi"
                nvidia.com/gpu:  1
        #nodeSelector:
        #  owner: ${ray_cluster_name}
        #topologySpreadConstraints:
        #- maxSkew: 1
        #  topologyKey: "topology.kubernetes.io/zone"
        #  whenUnsatisfiable: ScheduleAnyway
        #  labelSelector:
        #    matchLabels:
        #      ray.io/node-type: worker
        #affinity:
        #  podAntiAffinity:
        #    requiredDuringSchedulingIgnoredDuringExecution:
        #      - labelSelector:
        #          matchLabels:
        #            ray.io/node-type: worker
        #        topologyKey: topology.kubernetes.io/zone
